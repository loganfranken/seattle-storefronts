{
  "name": "leaflet-providers",
  "version": "1.0.2",
  "description": "An extension to Leaflet that contains configurations for various free tile providers.",
  "main": "leaflet-providers.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/leaflet-extras/leaflet-providers.git"
  },
  "scripts": {
    "pretest": "jshint leaflet-providers.js"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/leaflet-extras/leaflet-providers/issues"
  },
  "devDependencies": {
    "jshint": "~2.1.11"
  },
  "readme": "Leaflet-providers\n=================\nAn extension to [Leaflet](http://leafletjs.com/) that contains configurations for various free tile providers.\n\n# Usage\nLeaflet-providers [providers](#providers) are refered to with a `provider[.<variant>]`-string. Let's say you want to add the nice [Watercolor](http://maps.stamen.com/#watercolor/) style from Stamen to your map, you pass `Stamen.Watercolor` to the `L.tileLayer.provider`-constructor, which will return a [L.TileLayer](http://leafletjs.com/reference.html#tilelayer) instance for Stamens Watercolor tile layer.\n\n```Javascript\n// add Stamen Watercolor to map.\nL.tileLayer.provider('Stamen.Watercolor').addTo(map);\n```\n\n# Providers\n\nLeaflet-providers provides tile layers from different providers, including *OpenStreetMap*, *MapQuestOpen*, *Stamen*, *Esri* and *OpenWeatherMap*. The full listing of free to use layers can be [previewed](http://leaflet-extras.github.io/leaflet-providers/preview/index.html). The page will show you the name to use with `leaflet-providers.js` and the code to use it without dependencies.\n\n## Providers requiring registration\n\nIn addition the the providers you are free to use, we support some layers which require registration.\n\n### Nokia.\n\nIn order to use Nokia basemaps, you must [register](https://developer.here.com/web/guest/myapps). With your `devID` and `appID` specified in the options, the available layers are:\n\n* Nokia.normalDay\n* Nokia.normalGreyDay\n* Nokia.satelliteNoLabelsDay\n* Nokia.satelliteYesLabelsDay\n* Nokia.terrainDay\n\nFor example:\n```Javascript\nL.tileLayer.provider('Nokia.terrainDay', {\n    devID: 'insert ID here',\n    appId: 'insert ID here'\n}).addTo(map);\n```\n\n### Mapbox\n\nIn order to use Mapbox maps, you must [register](https://tiles.mapbox.com/signup). If your user name is `YourName` and your map is called `MyMap` you can add it with\n```JavaScript\nL.tileLayer.provider('MapBox.YourName.MyMap');\n```\n\n### CloudMade\n\nIn order to use CloudMade maps, you must [register](http://account.cloudmade.com/register). You may use it with your `apiKey` and `styleID` specified in the options like this:\n```JavaScript\nL.tileLayer.provider('CloudMade', {\n    apiKey: 'MyAPIKey',\n    styleID: '123'\n}).addTo(map);\n```\n\n# Goodies\n\nAn other little goodie this library provides is a prefilled layer control, so you can just provide an array of strings:\n\n```JavaScript\nvar baseLayers = ['Stamen.Watercolor', 'OpenStreetMap.Mapnik'],\n\toverlays = ['OpenWeatherMap.Clouds'];\n\nvar layerControl = L.control.layers.provided(baseLayers, overlays).addTo(map);\n\n// you can still add your own afterwards with\nlayerControl.addBaseLayer(layer, name);\n```\n\nThis work was inspired from <https://gist.github.com/1804938>, and originally created by [Stefan Seelmann](https://github.com/seelmann).\n",
  "readmeFilename": "README.md",
  "_id": "leaflet-providers@1.0.2",
  "_from": "leaflet-providers@"
}
