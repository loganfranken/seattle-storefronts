
var test = require('tape')
  , http = require('http')

var help = require('../lib/help.js')
  , cli = require('../lib/cli.js')

var mock = require('./utils-mock-stream.js')

var noop = Function()

// * if bundler is provided and is absolute, use it
// * if bundler is not absolute, look in <root>/node_modules/.bin/
// * if bundler is not absolute and not in node_modules/, use which
// * if bundler is not absolute and isn't which-able, use 'bundler'

integration:
test('finds the correct browserify', function(assert) {
  var stdout = mock()
    , stderr = mock()
    , exit = noop
    , open = noop
    , argv
    , cwd

  var random = '' + Math.random()
    , flag = '--flag'

  cwd = __dirname
  argv = ['node', 'beefy', 'entry.js', '9966', '--bundler', __dirname + '/utils-echo-bundler.js', '--', flag, random]

  cli(stdout, stderr, argv, cwd, 'anything', exit, open, onserver)

  function onserver(err, meta) {
    assert.ok(!err, 'should not error')
    assert.ok(meta.server, 'should have server')

    http.get('http://127.0.0.1:9966/entry.js', function(resp) {
      var acc = []

      resp
        .on('data', acc.push.bind(acc))
        .on('error', onerror)
        .on('end', onend)

      function onend() {
        var data = JSON.parse('' + Buffer.concat(acc))

        assert.deepEqual(data, ['node', __dirname + '/utils-echo-bundler.js', __dirname + '/entry.js', flag, random])
        meta.server.close(function() {
          assert.end()
        })
      }
    }).on('error', onerror)
  }

  function onerror(err) {
    assert.ok(!err, 'should not receive ' + err.message)
    assert.end()
  }
})
